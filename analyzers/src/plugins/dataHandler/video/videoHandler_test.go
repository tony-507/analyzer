package video

import (
	"testing"

	"github.com/stretchr/testify/assert"
	"github.com/tony-507/analyzers/src/common"
	"github.com/tony-507/analyzers/src/common/logging"
	"github.com/tony-507/analyzers/src/plugins/dataHandler/utils"
	"github.com/tony-507/analyzers/src/plugins/dataHandler/video/h264"
)

func TestReadMultipleNal(t *testing.T) {
	// 3rd unit is SEI with four messages, where the last message has trailing bits
	data := []byte{
		0x00, 0x00, 0x00, 0x01, 0x09, 0x10, // unit 1
		0x00, 0x00, 0x00, 0x01, 0x67, 0x64, 0x00, 0x28, 0xAC, 0x1B, 0x29, 0x40, // unit 2
		0x78, 0x04, 0x47, 0xDE, 0x02, 0x84, 0x04, 0x04, 0x05, 0x00, 0x00, 0x03,
		0x03, 0xE9, 0x00, 0x00, 0xEA, 0x60, 0x9D, 0xA1, 0xC3, 0x11, 0x60,
		0x00, 0x00, 0x00, 0x01, 0x06, 0x00, 0x01, 0xC0, 0x06, 0x01, 0xC4, 0x01, // unit 3
		0x09, 0x1B, 0x00, 0x02, 0xB9, 0x16, 0x00, 0x00, 0x03, 0x00, 0x08, 0x04,
		0x09, 0xB5, 0x00, 0x31, 0x44, 0x54, 0x47, 0x31, 0x41, 0xF8, 0x80,
	}
	handle := h264Handler{
		logger: logging.CreateLogger("test"),
		inCnt: 0,
		sqp: h264.CreateSequenceParameterSet(),
	}
	cmBuf := common.MakeSimpleBuf(data)
	unit := common.MakeIOUnit(cmBuf, 0, 0)
	newData := utils.CreateParsedData()
	handle.Feed(unit, &newData)

	assert.Equal(t, utils.PARSED_VIDEO, newData.GetType())
	videoData := newData.GetVideoData()
	assert.Equal(t, "00:05:28:02", videoData.TimeCode.ToString())
}

func TestReadMultipleSei(t *testing.T) {
	data := []byte{
		0x00, 0x01, 0xC0,
		0x06, 0x01, 0xC4,
		0x01, 0x09, 0x1B, 0x00, 0x02, 0xB9, 0x16, 0x00, 0x00, 0x00, 0x08,
		0x04, 0x09, 0xB5, 0x00, 0x31, 0x44, 0x54, 0x47, 0x31, 0x41, 0xF8, 0x80,
	}
	handle := h264Handler{
		logger: logging.CreateLogger("test"),
		inCnt: 0,
		sqp: h264.CreateSequenceParameterSet(),
	}
	handle.sqp.Vui.PicStructPresentFlag = true
	vData := utils.VideoData()

	handle.readSEI(data, &vData)

	assert.Equal(t, true, vData.TimeCode.Second != 0)
}
